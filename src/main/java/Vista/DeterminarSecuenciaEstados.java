/*
 * GPL.
 */
package Vista;

import Controlador.TipoController;
import Modelo.Estado;
import Modelo.EstadoListModel;
import Modelo.Tipo;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ale
 */
public class DeterminarSecuenciaEstados extends javax.swing.JDialog {

    /**
     * Creates new form DeterminarSecuenciaEstados
     */
    private Tipo tipo;
    private ArrayList<Estado> estadosElegidos = new ArrayList<Estado>();
    private TipoController tipoController=TipoController.getInstance();
    
    public DeterminarSecuenciaEstados(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaEstados = new javax.swing.JList<>();
        botonSubir = new javax.swing.JButton();
        botonBajar = new javax.swing.JButton();
        botonAceptarSecuencia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Determinar secuencia para tipo");

        listaEstados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listaEstados);

        botonSubir.setText("Subir");
        botonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSubirActionPerformed(evt);
            }
        });

        botonBajar.setText("Bajar");
        botonBajar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBajarActionPerformed(evt);
            }
        });

        botonAceptarSecuencia.setText("Aceptar Secuencia");
        botonAceptarSecuencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarSecuenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAceptarSecuencia)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonSubir)
                            .addComponent(botonBajar))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(botonSubir)
                        .addGap(43, 43, 43)
                        .addComponent(botonBajar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(botonAceptarSecuencia)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ordenarSecuencia(Tipo tipo){
        this.tipo=tipo;
        EstadoListModel listModel=new EstadoListModel();
        //EstadoListModel listModel=EstadoListModel.getInstance();
        for (int i = 0; i < tipo.getEstados().size(); i++) {
            //carga los estados en la lista
            listModel.addElement(tipo.getEstados().get(i));            
        }
        listaEstados.setModel(listModel);
    }
    
    private void botonAceptarSecuenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarSecuenciaActionPerformed
        
        //obtiene el texto de la secuencia de estados
        String textoEstados="{ ";
        for (Estado estadoElegido : tipo.getEstados()) {
            estadosElegidos.add(estadoElegido);
            textoEstados+=estadoElegido.getNombre()+",";
        }
        textoEstados+=" }";
        
        //agrega los items en la secuencia establecida
        Tipo t=tipoController.nuevoTipo(tipo.getNombre(), estadosElegidos);
        tipoController.agregarTipo(tipo, textoEstados);
        this.setVisible(false);
    }//GEN-LAST:event_botonAceptarSecuenciaActionPerformed

    private void botonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSubirActionPerformed
        //sube el estado seleccionado
        int indexSelec=listaEstados.getSelectedIndex();
        System.out.println(indexSelec);
        if (indexSelec==-1) {
            JOptionPane.showMessageDialog(null, "Seleccionar un estado","Alerta",JOptionPane.ERROR_MESSAGE);
        }else if(indexSelec!=0){
            int estadoIndex=indexSelec;
            Estado subir=tipo.getEstados().get(estadoIndex);
            Estado bajar=tipo.getEstados().get(estadoIndex-1);
            tipo.getEstados().set(estadoIndex-1, subir);
            tipo.getEstados().set(estadoIndex, bajar);
            //actualiza
            ordenarSecuencia(tipo);
            listaEstados.setSelectedIndex(estadoIndex-1);            
        }
            
        
    }//GEN-LAST:event_botonSubirActionPerformed

    private void botonBajarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBajarActionPerformed
        int indexSelec=listaEstados.getSelectedIndex();
        
        if (indexSelec==-1) {
            JOptionPane.showMessageDialog(null, "Seleccionar un estado","Alerta",JOptionPane.ERROR_MESSAGE);
        }else if(indexSelec<tipo.getEstados().size()-1){
            int estadoIndex=indexSelec;
            Estado bajar=tipo.getEstados().get(estadoIndex);
            Estado subir=tipo.getEstados().get(estadoIndex+1);
            tipo.getEstados().set(estadoIndex+1, bajar);
            tipo.getEstados().set(estadoIndex, subir);
            //actualiza
            ordenarSecuencia(tipo);
            listaEstados.setSelectedIndex(estadoIndex+1);
        }

    }//GEN-LAST:event_botonBajarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeterminarSecuenciaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeterminarSecuenciaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeterminarSecuenciaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeterminarSecuenciaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DeterminarSecuenciaEstados dialog = new DeterminarSecuenciaEstados(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptarSecuencia;
    private javax.swing.JButton botonBajar;
    private javax.swing.JButton botonSubir;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JList<String> listaEstados;
    // End of variables declaration//GEN-END:variables
}
