/*
 * GPL.
 */
package Vista;

import Controlador.ItemController;
import Controlador.RegistroController;
import Modelo.Estado;
import Modelo.Historial;
import Modelo.Item;
import Modelo.Miembro;
import Modelo.Registro;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ale
 */
public class ActualizarEstado extends javax.swing.JDialog {

    /**
     * Creates new form ActualizarEstado
     */
    private Item item;
    private Integer fila;
    private ItemController itemController=ItemController.getInstance();
    private RegistroController registroController=RegistroController.getInstance();

    public ActualizarEstado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        radioModificar.setSelected(false);
        comboEstados.setEnabled(false);
        comboResponsables.setEnabled(false);
       
    }
    
    public void configurar(){
        radioModificar.setSelected(false);
        comboEstados.setEnabled(false);
        comboResponsables.setEnabled(false);
    }
    
    public void setItem(Item item,Integer fila){
        this.item=item;
        this.fila=fila;
        setData(item);
    }
    
    //se inicializan los valores del dialog con los datos del item seleccionado
    public void setData(Item data){
        textItem.setText(data.getNombre());
        textPrioridad.setText(data.getPrioridad().getNombre());
        textTipo.setText(data.getTipo().getNombre());
        textEquipo.setText(data.getEquipo().getNombre());
        
        List<Miembro> miembros=item.getEquipo().getMiembros();
        
        Miembro integrantes[]=new Miembro[miembros.size()];
        for (int i = 0; i < miembros.size(); i++) {
                //carga los tipos
                Miembro m=miembros.get(i);
                integrantes[i]=m;                
            }
        
        comboResponsables.setModel(new DefaultComboBoxModel(integrantes));
        
        List<Estado> estados=item.getTipo().getEstados();
        Estado estadosPosibles[]=new Estado[estados.size()];
       
        for (int i = 0; i < estados.size(); i++) {
            //carga los estados 
            Estado e=estados.get(i);
            estadosPosibles[i]=e;                
        }        
        comboEstados.setModel(new DefaultComboBoxModel(estadosPosibles));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textItem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textTipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textPrioridad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textEquipo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboEstados = new javax.swing.JComboBox<>();
        botonCancelar = new javax.swing.JButton();
        comboResponsables = new javax.swing.JComboBox<>();
        botonSiguienteEstado = new javax.swing.JButton();
        radioModificar = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actualizar Item");

        jLabel1.setText("Nombre Item:");

        textItem.setEnabled(false);
        textItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textItemActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo:");

        textTipo.setEnabled(false);
        textTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTipoActionPerformed(evt);
            }
        });

        jLabel3.setText("Prioridad:");

        textPrioridad.setEnabled(false);
        textPrioridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrioridadActionPerformed(evt);
            }
        });

        jLabel4.setText("Equipo:");

        textEquipo.setEnabled(false);
        textEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textEquipoActionPerformed(evt);
            }
        });

        jLabel5.setText("Responsable:");

        jLabel6.setText("Estado:");

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        botonSiguienteEstado.setText("Siguiente Estado");
        botonSiguienteEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteEstadoActionPerformed(evt);
            }
        });

        radioModificar.setText("Modificar Estado");
        radioModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonCancelar)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textItem, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboResponsables, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEstados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radioModificar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonSiguienteEstado)))
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboResponsables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(radioModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCancelar)
                    .addComponent(botonSiguienteEstado))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textItemActionPerformed

    private void textTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTipoActionPerformed

    private void textPrioridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrioridadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPrioridadActionPerformed

    private void textEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textEquipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textEquipoActionPerformed

    private void botonSiguienteEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteEstadoActionPerformed
                    
        if(radioModificar.isSelected()){
            //si el siguiente estado seleccionado y el responsable elegido son los mismos salta un alerta
            if(item.getNumEstadoActual()==comboEstados.getSelectedIndex()&&item.getResponsable()==(Miembro)comboResponsables.getSelectedItem()){
                JOptionPane.showMessageDialog(null, "No hay diferencias entre el estado y responsable seleccionados con los actuales","Aviso",JOptionPane.INFORMATION_MESSAGE);
            }else{
                //utilizar los valores seleccionados en los combobox
                itemController.siguienteEstado(item,comboEstados.getSelectedIndex(),(Estado)comboEstados.getSelectedItem(),(Miembro)comboResponsables.getSelectedItem());            
                itemController.modificarItem(fila,item);
                //registrar el cambio de estado y/o responsable
                Registro nuevoRegistro=registroController.nuevoRegistro(item);            
                registroController.agregarRegistro(nuevoRegistro, item.getPrioridad(), item.getTipo(), item.getEstadoActual(), item.getEquipo(), item.getResponsable());
                System.out.println("Se ha asignado el item "+item.getNombre()+" con el estado "+item.getEstadoActual().getNombre()+" al responsable "+item.getResponsable().getNombre());
                this.setVisible(false);
            }
        }else{
            if(itemController.compruebaSecuencia(item)){
                //avanzar según la secuencia de estados
                itemController.siguienteEstado(item);                      
                itemController.modificarItem(fila,item);
                //registrar el cambio de estado
                Registro nuevoRegistro=registroController.nuevoRegistro(item);            
                registroController.agregarRegistro(nuevoRegistro, item.getPrioridad(), item.getTipo(), item.getEstadoActual(), item.getEquipo(), item.getResponsable());
                System.out.println("Se ha asignado el item "+item.getNombre()+" con el estado "+item.getEstadoActual().getNombre()+" al responsable "+item.getResponsable().getNombre());
                this.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(null, "No hay un siguiente Estado al que pueda avanzar el item","Aviso",JOptionPane.INFORMATION_MESSAGE);
            }
        }            
    }//GEN-LAST:event_botonSiguienteEstadoActionPerformed

    private void radioModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioModificarActionPerformed
        if(radioModificar.isSelected()){
            comboResponsables.setEnabled(true);
            comboEstados.setEnabled(true);
        }else{
            comboResponsables.setEnabled(false);
            comboEstados.setEnabled(false);
        }
    }//GEN-LAST:event_radioModificarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_botonCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActualizarEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActualizarEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActualizarEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActualizarEstado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ActualizarEstado dialog = new ActualizarEstado(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonSiguienteEstado;
    private javax.swing.JComboBox<String> comboEstados;
    private javax.swing.JComboBox<String> comboResponsables;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton radioModificar;
    private javax.swing.JTextField textEquipo;
    private javax.swing.JTextField textItem;
    private javax.swing.JTextField textPrioridad;
    private javax.swing.JTextField textTipo;
    // End of variables declaration//GEN-END:variables
}
